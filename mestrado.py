import streamlit as st
import pandas as pd
from datetime import datetime

st.set_page_config(page_title="Ambiente de Metodologia de Pesquisa", layout="wide")

st.title("üîç Ambiente Interativo de Metodologia de Pesquisa")
st.markdown("Este ambiente foi criado para explorar diferentes abordagens metodol√≥gicas de forma pr√°tica e interativa.")

aba = st.sidebar.radio("Escolha uma abordagem/metodologia:", [
    "Abordagem Qualitativa",
    "Abordagem Quantitativa",
    "Estudo de Caso",
    "Base de Dados Textuais",
    "Base com V√≠deos",
    "Simula√ß√µes Quantitativas"
])

# ----------- ABA QUALITATIVA ----------- #
if aba == "Abordagem Qualitativa":
    st.header("üß† Abordagem Qualitativa")
    uploaded_file = st.file_uploader("Envie um arquivo .txt com uma entrevista ou relato")
    if uploaded_file:
        texto = uploaded_file.read().decode("utf-8")
        st.text_area("Texto da Entrevista:", value=texto, height=300)

        categoria = st.selectbox("Categoria interpretativa", [
            "Argumento central", "Marcas de subjetividade", "Estrat√©gia ret√≥rica", "Apelo emocional"
        ])
        anotacao = st.text_area("Sua anota√ß√£o ou interpreta√ß√£o sobre o trecho")
        if st.button("Salvar anota√ß√£o"):
            st.success("Anota√ß√£o salva com sucesso!")

# ----------- ABA QUANTITATIVA ----------- #
elif aba == "Abordagem Quantitativa":
    st.header("üìä Abordagem Quantitativa")
    arquivo_csv = st.file_uploader("Envie uma base de dados (.csv)", type="csv")
    if arquivo_csv:
        df = pd.read_csv(arquivo_csv)
        st.write("Pr√©-visualiza√ß√£o dos dados:", df.head())
        st.write("Estat√≠sticas Descritivas:", df.describe())

        coluna = st.selectbox("Escolha uma coluna num√©rica para visualizar:", df.select_dtypes(include='number').columns)
        st.line_chart(df[coluna])

# ----------- ABA ESTUDO DE CASO ----------- #
elif aba == "Estudo de Caso":
    st.header("üîç Estudo de Caso")
    caso = st.selectbox("Escolha um caso para explorar:", [
        "Caso Mariana", "Greve dos Caminhoneiros", "COP 30", "Inunda√ß√µes em Recife"
    ])
    st.text_input("Hip√≥tese ou quest√£o central:")
    st.text_area("Notas de observa√ß√£o e an√°lise:")
    st.markdown("---")
    st.markdown("Use esta se√ß√£o para desenvolver o racioc√≠nio anal√≠tico sobre o caso selecionado.")

# ----------- ABA TEXTUAL ----------- #
elif aba == "Base de Dados Textuais":
    st.header("üìÑ An√°lise de Base Textual")
    base_textual = st.file_uploader("Envie uma base de coment√°rios ou textos (.csv com uma coluna de texto)")
    if base_textual:
        df_text = pd.read_csv(base_textual)
        coluna_texto = st.selectbox("Escolha a coluna com os textos:", df_text.columns)
        texto_completo = " ".join(df_text[coluna_texto].astype(str))

        st.subheader("Exibi√ß√£o de Palavras Frequentes")
        palavras = texto_completo.split()
        frequencia = pd.Series(palavras).value_counts().head(20)
        st.bar_chart(frequencia)

# ----------- ABA V√çDEO ----------- #
elif aba == "Base com V√≠deos":
    st.header("üé• An√°lise de V√≠deo")
    st.video("https://www.youtube.com/watch?v=6xSxXiHwMrg")  # Exemplo
    st.slider("Minutagem do v√≠deo para observa√ß√£o:", 0, 300, 0)
    st.text_area("Anota√ß√£o sobre este trecho do v√≠deo")
    if st.button("Salvar anota√ß√£o do v√≠deo"):
        st.success("Anota√ß√£o registrada com sucesso!")

# ----------- ABA SIMULA√á√ïES QUANTITATIVAS ----------- #
elif aba == "Simula√ß√µes Quantitativas":
    st.header("üß™ Simula√ß√µes de Pesquisa Quantitativa com Dados Digitais")

    questao = st.selectbox("Escolha uma quest√£o de pesquisa para explorar:", [
        "Qual √© o volume de publica√ß√µes sobre determinado tema ao longo do tempo?",
        "Qual tipo de postagem gera maior n√∫mero m√©dio de curtidas?",
        "H√° correla√ß√£o entre n√∫mero de hashtags e n√∫mero de coment√°rios?",
        "Como varia o n√∫mero de coment√°rios entre diferentes autores/perfis?",
        "Existe diferen√ßa estat√≠stica entre engajamento de dois temas?"
    ])

    st.markdown("Fa√ßa o upload da base de dados que contenha colunas como 'data', 'tema', 'hashtags', 'comentarios', 'curtidas', 'tipo_postagem', etc.")
    arquivo_simulacao = st.file_uploader("Envie a base (.csv)", type="csv")
    if arquivo_simulacao:
        df_sim = pd.read_csv(arquivo_simulacao)
        st.write("Pr√©-visualiza√ß√£o dos dados:", df_sim.head())

        if questao == "Qual √© o volume de publica√ß√µes sobre determinado tema ao longo do tempo?":
            if 'data' in df_sim.columns:
                df_sim['data'] = pd.to_datetime(df_sim['data'])
                contagem = df_sim.groupby(df_sim['data'].dt.date).size()
                st.line_chart(contagem)

        elif questao == "Qual tipo de postagem gera maior n√∫mero m√©dio de curtidas?":
            if 'tipo_postagem' in df_sim.columns and 'curtidas' in df_sim.columns:
                medias = df_sim.groupby('tipo_postagem')['curtidas'].mean()
                st.bar_chart(medias)

        elif questao == "H√° correla√ß√£o entre n√∫mero de hashtags e n√∫mero de coment√°rios?":
            if 'hashtags' in df_sim.columns and 'comentarios' in df_sim.columns:
                df_sim['n_hashtags'] = df_sim['hashtags'].astype(str).apply(lambda x: len(x.split(',')))
                correlacao = df_sim[['n_hashtags', 'comentarios']].corr()
                st.write("Correla√ß√£o:", correlacao)

        elif questao == "Como varia o n√∫mero de coment√°rios entre diferentes autores/perfis?":
            if 'autor' in df_sim.columns and 'comentarios' in df_sim.columns:
                soma_coment = df_sim.groupby('autor')['comentarios'].sum()
                st.bar_chart(soma_coment)

        elif questao == "Existe diferen√ßa estat√≠stica entre engajamento de dois temas?":
            st.write("‚ö†Ô∏è Essa an√°lise requer tratamento estat√≠stico adicional (teste t, ANOVA, etc.). Podemos implement√°-la em uma vers√£o futura.")
